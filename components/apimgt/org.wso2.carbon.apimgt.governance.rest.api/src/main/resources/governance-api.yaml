# Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License
################################################################################
openapi: 3.0.1
info:
  version: v1.1
  title: WSO2 API Manager - Governance
  description: |
    This document specifies a **RESTful API** for WSO2 **API Manager** - Governance.
  contact:
    name: WSO2
    url: http://wso2.com/products/api-manager/
    email: architecture@wso2.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://apis.wso2.com/api/am/governance/v1
tags:
  - name: Governance Policies
    description: for managing governance policies.
  - name: Governance Policy Attachments
    description: for managing governance policy attachments.
  - name: Artifact Compliance
    description: for accessing artifact compliance.
  - name: Policy Attachment Adherence
    description: for accessing policy attachments adherence.
paths:
  /policies:
    get:
      summary: Retrieves a list of policies.
      description: Returns a list of all policies associated with the requested organization.
      operationId: getPolicies
      tags:
        - Governance Policies
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: query
          in: query
          schema:
            type: string
            example: "name:WSO2 Security Practices artifactType:REST_API policyType:API_DEFINITION"
          description: |
            You can search for policies using the following format:

              - "query=name:{NAME}" searches policies by name.
              - "query=artifactType:{ARTIFACT_TYPE}" searches policies by artifact type.
              - "query=policyType:{POLICY_TYPE}" searches policies by policy type.

            You can combine multiple attributes to search for policies:
              - "query=name:{NAME} artifactType:{ARTIFACT_TYPE} policyType:{POLICY_TYPE}" searches policies by name, artifact type, and policy type.

            Remember to use URL encoding if your client does not support it (e.g., curl).
      responses:
        "200":
          description: OK. Successful response with a list of policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_read
    post:
      summary: Create a new policy.
      description: Creates a new policy in the user's organization.
      operationId: createPolicy
      tags:
        - Governance Policies
      requestBody:
        required: true
        description: JSON object containing the details of the new policy.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyInput'
      responses:
        "201":
          description: OK. Policy created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyInfo'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_manage
  /policies/{policyId}:
    get:
      summary: Retrieves details of a specific policy.
      description: Retrieves details of the policy identified by the policyId.
      operationId: getPolicyById
      tags:
        - Governance Policies
      parameters:
        - $ref: '#/components/parameters/policyId'
      responses:
        "200":
          description: OK. Policy details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyInfo'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_read
    put:
      summary: Updates a specific policy.
      description: Updates the details of the policy identified by the `policyId`.
      operationId: updatePolicyById
      tags:
        - Governance Policies
      parameters:
        - $ref: '#/components/parameters/policyId'
      requestBody:
        required: true
        description: JSON object containing the updated policy details.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolicyInput'
      responses:
        "200":
          description: OK. Policy updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyInfo'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_manage
    delete:
      summary: Deletes a specific policy.
      description: Deletes an existing policy identified by the policyId.
      operationId: deletePolicy
      tags:
        - Governance Policies
      parameters:
        - $ref: '#/components/parameters/policyId'
      responses:
        '204':
          description: OK. Policy deleted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_manage
  /policies/{policyId}/content:
    get:
      summary: Retrieves the content of a specific policy.
      description: Retrieves the content of the policy identified by the policyId.
      operationId: getPolicyContent
      tags:
        - Governance Policies
      parameters:
        - $ref: '#/components/parameters/policyId'
      responses:
        "200":
          description: OK. Policy content retrieved successfully.
          content:
            application/x-yaml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_read
  /policies/{policyId}/usage:
    get:
      summary: Retrieves the policy attachment usage of a specific policy.
      description: Retrieves the list of policy attachments using the policy identified by the policyId.
      operationId: getPolicyUsage
      tags:
        - Governance Policies
      parameters:
        - $ref: '#/components/parameters/policyId'
      responses:
        "200":
          description: OK. Policy usage retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                description: List of artifacts using the policy.
                items:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_read
  /policy-attachments:
    get:
      summary: Retrieves a list of all governance policy-attachments.
      description: Retrieves a list of governance policy-attachments for the user's organization.
      operationId: getGovernancePolicyAttachments
      tags:
        - Governance Policy Attachments
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: query
          in: query
          schema:
            type: string
            example: "name:WSO2 Best Practices state:API_CREATE label:GLOBAL"
          description: |
            You can search for governance policy attachments using following format.

              - "query=name:{NAME}" searches policy attachments by name.
              - "query=state:{STATE} " searches policy attachments by state.
            
            You can also use multiple attributes to search for policy attachments.
              - "query=name:{NAME} state:{STATE}" searches policy attachments by name, state, and label.

            Remember to use URL encoding if your client doesn't support it (e.g., curl).
      responses:
        "200":
          description: OK. Successful response with a list of governance policy attachments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMGovernancePolicyAttachmentList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_attachment_read
    post:
      summary: Creates a new governance policy attachment.
      description: Creates a new governance policy attachment for the user's organization.
      operationId: createGovernancePolicyAttachment
      tags:
        - Governance Policy Attachments
      requestBody:
        required: true
        description: JSON object containing the details of the new governance policy attachment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIMGovernancePolicyAttachment'
      responses:
        "201":
          description: OK. Governance policy attachment created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMGovernancePolicyAttachment'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_attachment_manage
  /policy-attachments/{policyAttachmentId}:
    get:
      summary: Get a specific governance policy attachment
      description: Retrieves details of a specific governance policy attachment identified by the policyAttachmentId.
      operationId: getGovernancePolicyAttachmentById
      tags:
        - Governance Policy Attachments
      parameters:
        - $ref: '#/components/parameters/policyAttachmentId'
      responses:
        "200":
          description: OK. Governance policy attachment details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMGovernancePolicyAttachment'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_attachment_read
    put:
      summary: Update a specific governance policy attachment
      description: Updates the details of an existing governance policy attachment identified by the policyAttachmentId.
      operationId: updateGovernancePolicyAttachmentById
      tags:
        - Governance Policy Attachments
      parameters:
        - $ref: '#/components/parameters/policyAttachmentId'
      requestBody:
        required: true
        description: JSON object containing the updated governance policy attachment details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIMGovernancePolicyAttachment'
      responses:
        "200":
          description: OK. Governance policy attachment updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMGovernancePolicyAttachment'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_attachment_manage
    delete:
      summary: Delete a specific governance policy attachment
      description: Deletes an existing governance policy attachment identified by the policyAttachmentId.
      operationId: deleteGovernancePolicyAttachment
      tags:
        - Governance Policy Attachments
      parameters:
        - $ref: '#/components/parameters/policyAttachmentId'
      responses:
        '204':
          description: OK. Governance policy attachment deleted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_policy_attachment_manage
  /artifact-compliance/api:
    get:
      summary: Retrieves compliance of all API artifacts
      description: Retrieves compliance of all API artifacts within the organization.
      operationId: getComplianceStatusListOfAPIs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - Artifact Compliance
      responses:
        "200":
          description: OK. Successful response with API compliance results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactComplianceList'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read
  /artifact-compliance/api/summary:
    get:
      summary: Retrieves the summary of compliance of all API artifacts
      description: Retrieves the summary of compliance of all API artifacts within the organization.
      operationId: getComplianceSummaryForAPIs
      tags:
        - Artifact Compliance
      responses:
        "200":
          description: OK. Successful response with compliance summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactComplianceSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read
  /artifact-compliance/api/{apiId}:
    get:
      summary: Retrieve compliance details for a specific API
      description: Retrieve compliance details associated with a specific API using its unique UUID.
      operationId: getComplianceByAPIId
      tags:
        - Artifact Compliance
      parameters:
        - $ref: '#/components/parameters/apiId'
      responses:
        "200":
          description: Successful response with compliance details for the specified artifact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactComplianceDetails'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read
  /artifact-compliance/api/{apiId}/policy-validation-results/{policyId}:
    get:
      summary: Retrieve policy validation results for a specific API
      description: Retrieve policy validation results associated with a specific API using its unique UUID.
      operationId: getPolicyValidationResultsByAPIId
      tags:
        - Artifact Compliance
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/policyId'
      responses:
        "200":
          description: Successful response with policy validation results for the specified API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyValidationResult'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read
  /policy-attachment-adherence:
    get:
      summary: Retrieve adherence status for all policy attachments
      description: Retrieve adherence status of all governance policy attachments within the organization.
      operationId: getPolicyAttachmentAdherenceForAllPolicyAttachments
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - Policy Attachment Adherence
      responses:
        "200":
          description: Ok. Successful response with adherence details for all policy attachments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAttachmentAdherenceList'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read
  /policy-attachment-adherence/summary:
    get:
      summary: Retrieves the summary of adherence for all policy attachments
      description: Retrieves the summary of adherence for all governance policy attachments within the organization.
      operationId: getPolicyAttachmentAdherenceSummary
      tags:
        - Policy Attachment Adherence
      responses:
        "200":
          description: OK. Successful response with adherence summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAttachmentAdherenceSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read
  /policy-attachment-adherence/{policyAttachmentId}:
    get:
      summary: Retrieve adherence details for a specific policy attachment
      description: Retrieve adherence details associated with a specific governance policy attachment within the organization using its unique ID.
      operationId: getPolicyAttachmentAdherenceByPolicyAttachmentId
      tags:
        - Policy Attachment Adherence
      parameters:
        - $ref: '#/components/parameters/policyAttachmentId'
      responses:
        "200":
          description: Ok. Successful response with adherence details for the specified policy attachment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAttachmentAdherenceDetails'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - OAuth2Security:
            - apim:gov_result_read

components:
  schemas:
    Pagination:
      title: Pagination
      type: object
      properties:
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 1
        total:
          type: integer
          example: 10
        next:
          type: string
          description: |
            Link to the next subset of resources qualified.
            Empty if no more resources are to be returned.
        previous:
          type: string
          description: |
            Link to the previous subset of resources qualified.
            Empty if current subset is the first subset returned.
    Error:
      title: Error object returned with 4XX HTTP Status
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          description: Error message.
        description:
          type: string
          description: |
            A detail description about the error message.
    PolicyList:
      type: object
      description: A list of policies.
      properties:
        count:
          type: integer
          description: Number of policies returned.
          example: 2
        list:
          type: array
          description: List of policies.
          items:
            $ref: '#/components/schemas/PolicyInfo'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PolicyInput:
      type: object
      description: Detailed information about a policy.
      properties:
        name:
          type: string
          description: Name of the policy.
          example: "API Security Policy"
        description:
          type: string
          description: A brief description of the policy.
          example: "A policy designed to enforce security standards for APIs."
        policyContent:
          type: string
          description: The content of the policy file (YAML or JSON).
          format: binary
          example: |
            rules:
              oas2-always-use-https:
                given:
                  - '$.schemes[*]'
                severity: error
                then:
                  function: enumeration
                  functionOptions:
                    values:
                      - https
                description: >-
                  Host schemes must use the HTTPS protocol. Applies to: OpenAPI 2.0`
                message: API host schemes must use the HTTPS protocol.
                formats:
                  - oas2
        policyCategory:
          type: string
          description: Category the of the policy based on the rules included.
          enum:
            - SPECTRAL
          example: SPECTRAL
          default: SPECTRAL
        policyType:
          type: string
          description: Context or area to which the policy applies.
          enum:
            - API_METADATA
            - API_DEFINITION
            - API_DOCUMENTATION
          example: API_DEFINITION
          x-enum-varnames:
            - API_METADATA
            - API_DEFINITION
            - API_DOCUMENTATION
        artifactType:
          type: string
          description: The type of artifact that the policy validates.
          enum:
            - REST_API
            - ASYNC_API
          example: REST_API
        documentationLink:
          type: string
          description: URL to the documentation related to the policy.
          example: "https://example.com/docs/api-security-policy"
        provider:
          type: string
          description: Entity or individual providing the policy.
          example: "TechWave"
      required:
        - name
        - policyContent
        - policyType
        - artifactType
    PolicyInfo:
      type: object
      description: Detailed information about a policy.
      properties:
        id:
          type: string
          description: UUID of the policy.
          readOnly: true
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the policy.
          example: "API Security Policy"
        description:
          type: string
          description: A brief description of the policy.
          example: "A policy designed to enforce security standards for APIs."
        policyCategory:
          type: string
          description: Category of the policy based on the rules included.
          enum:
            - SPECTRAL
          example: SPECTRAL
        policyType:
          type: string
          description: Context or area to which the policy applies.
          enum:
            - API_METADATA
            - API_DEFINITION
            - API_DOCUMENTATION
          example: API_DEFINITION
          x-enum-varnames:
            - API_METADATA
            - API_DEFINITION
            - API_DOCUMENTATION
        artifactType:
          type: string
          description: The type of artifact that the policy validates.
          enum:
            - REST_API
            - ASYNC_API
          example: REST_API
        documentationLink:
          type: string
          description: URL to the documentation related to the policy.
          example: "https://example.com/docs/api-security-policy"
        provider:
          type: string
          description: Entity or individual providing the policy.
          example: "TechWave"
        createdBy:
          type: string
          description: Identifier of the user who created the policy.
          readOnly: true
          example: "admin@gmail.com"
        createdTime:
          type: string
          description: Timestamp when the policy was created.
          readOnly: true
          example: "2024-08-01T12:00:00Z"
        updatedBy:
          type: string
          description: Identifier of the user who last updated the policy.
          readOnly: true
          example: "admin@gmail.com"
        updatedTime:
          type: string
          description: Timestamp when the policy was last updated.
          readOnly: true
          example: "2024-08-02T12:00:00Z"
      required:
        - name
        - policyType
        - artifactType
        - provider
    APIMGovernancePolicyAttachment:
      type: object
      description: Detailed information about a governance policy attachment.
      properties:
        id:
          type: string
          description: UUID of the governance policy attachment.
          readOnly: true
          example: "987e6543-d21b-34d5-b678-912345678900"
        name:
          type: string
          description: Name of the governance policy attachment.
          example: "API Security Policy Attachment"
        description:
          type: string
          description: A brief description of the governance policy attachment.
          example: "Policy Attachment for enforcing security standards across all APIs."
        governableStates:
          type: array
          description: List of states at which the governance policy attachment should be enforced.
          items:
            type: string
            description: The state at which an governance policy attachment should be enforced.
            enum:
              - API_CREATE
              - API_UPDATE
              - API_DEPLOY
              - API_PUBLISH
            example: "API_DEPLOY"
            x-enum-varnames:
              - API_CREATE
              - API_UPDATE
              - API_DEPLOY
              - API_PUBLISH
        actions:
          type: array
          description: List of actions taken when the governance policy attachment is violated. An action is defined by the state and rule severity. If an action is not specified to each state and rule severity, the default action is `NOTIFY`.
          items:
            $ref: '#/components/schemas/Action'
        policies:
          type: array
          description: List of policies associated with the governance policy attachment.
          items:
            type: string
            example: "94566543-d21b-34d5-b678-912345678900"
        labels:
          type: array
          description: List of labels IDs associated with the governance policy attachment.
          items:
            type: string
          example:
            - "54d5833a-ca86-44bb-bcda-5b9fcdacd79d"
        createdBy:
          type: string
          description: Identifier of the user who created the governance policy attachment.
          readOnly: true
          example: "admin@wso2.com"
        createdTime:
          type: string
          description: Timestamp when the governance policy attachment was created.
          readOnly: true
          example: "2024-08-01T12:00:00Z"
        updatedBy:
          type: string
          description: Identifier of the user who last updated the governance policy attachment.
          readOnly: true
          example: "admin@wso2.com"
        updatedTime:
          type: string
          description: Timestamp when the governance policy attachment was last updated.
          readOnly: true
          example: "2024-08-02T12:00:00Z"
      required:
        - name
        - Governance Policies
        - labels
        - governableStates
        - actions
    Action:
      type: object
      description: Action to be taken when a governance policy attachment is violated.
      properties:
        state:
          type: string
          description: The state of the artifact to which the action is linked to.
          enum:
            - API_CREATE
            - API_UPDATE
            - API_DEPLOY
            - API_PUBLISH
          example: "API_DEPLOY"
          x-enum-varnames:
            - API_CREATE
            - API_UPDATE
            - API_DEPLOY
            - API_PUBLISH
        ruleSeverity:
          type: string
          description: The severity of the rule to which the action is linked to.
          enum:
            - ERROR
            - WARN
            - INFO
          example: "ERROR"
        type:
          type: string
          description: The type of action to be taken when a governance policy attachment is violated in the given state withe given rule severity.
          enum:
            - BLOCK
            - NOTIFY
          example: "BLOCK"
    APIMGovernancePolicyAttachmentList:
      type: object
      description: A list of governance policy attachments.
      properties:
        count:
          type: integer
          description: Number of governance policy attachments returned.
          example: 10
        list:
          type: array
          description: List of governance policy attachments.
          items:
            $ref: '#/components/schemas/APIMGovernancePolicyAttachment'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ArtifactComplianceSummary:
      type: object
      description: Summary of compliance of certain artifact in the organization.
      properties:
        total:
          type: integer
          description: Total number of artifacts.
          example: 10
        compliant:
          type: integer
          description: Number of compliant artifacts.
          example: 6
        nonCompliant:
          type: integer
          description: Number of non-compliant artifacts.
          example: 4
        pending:
          type: integer
          description: Number of artifacts pending for compliance.
          example: 0
        notApplicable:
          type: integer
          description: Number of artifacts not applicable for compliance yet.
          example: 0
    PolicyAttachmentAdherenceSummary:
      type: object
      description: Summary of governance policy attachment adherence in the organization.
      properties:
        total:
          type: integer
          description: Total number of policy attachments.
          example: 10
        followed:
          type: integer
          description: Number of policy attachments followed to.
          example: 6
        violated:
          type: integer
          description: Number of policy attachments violated.
          example: 4
        unApplied:
          type: integer
          description: Number of policy attachments unApplied.
          example: 0
    ArtifactComplianceList:
      type: object
      description: Compliance status of a list of artifacts.
      properties:
        count:
          type: integer
          description: Number of artifact returned.
          example: 10
        list:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactComplianceStatus'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PolicyAttachmentAdherenceList:
      type: object
      description: Policy Attachment adherence status of a list of policy attachments.
      properties:
        count:
          type: integer
          description: Number of policy attachments returned.
          example: 10
        list:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAttachmentAdherenceStatus'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ArtifactComplianceStatus:
      type: object
      description: Provides compliance status of an artifact.
      properties:
        id:
          type: string
          description: UUID of the API.
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          description: Status of the API's governance compliance.
          enum:
            - COMPLIANT
            - NON-COMPLIANT
            - NOT-APPLICABLE
            - PENDING
          example: "COMPLIANT"
        info:
          $ref: '#/components/schemas/ArtifactInfo'
        policyAttachmentAdherenceSummary:
          $ref: '#/components/schemas/PolicyAttachmentAdherenceSummary'
        severityBasedRuleViolationSummary:
          type: array
          description: Summary of severity based rule violations.
          items:
            $ref: '#/components/schemas/SeverityBasedRuleViolationCount'
    PolicyAttachmentAdherenceStatus:
      type: object
      description: Provides adherence status of a policy attachment.
      properties:
        id:
          type: string
          description: UUID of the policy attachment.
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the policy attachment.
          example: "Policy1"
        status:
          type: string
          description: Status of the policy attachment's governance compliance.
          enum:
            - FOLLOWED
            - VIOLATED
            - UNAPPLIED
          example: "FOLLOWED"
        artifactComplianceSummary:
          $ref: '#/components/schemas/ArtifactCompSummaryForPolicyAttachment'
    ArtifactCompSummaryForPolicyAttachment:
      type: object
      description: Summary of compliance of artifacts evaluated against a specific policy attachment.
      properties:
        compliant:
          type: integer
          description: Number of compliant artifacts.
          example: 6
        nonCompliant:
          type: integer
          description: Number of non-compliant artifacts.
          example: 4
    ArtifactComplianceDetails:
      type: object
      description: Provides compliance details of an artifact.
      properties:
        id:
          type: string
          description: UUID of the artifact.
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          description: Status of the artifact's governance compliance.
          enum:
            - COMPLIANT
            - NON-COMPLIANT
            - NOT-APPLICABLE
            - PENDING
          example: "COMPLIANT"
        info:
          $ref: '#/components/schemas/ArtifactInfo'
        governedPolicyAttachments:
          type: array
          description: List of policy attachments under which the artifact was governed.
          items:
            $ref: '#/components/schemas/PolicyAttachmentAdherenceWithPolicies'
    PolicyAttachmentAdherenceDetails:
      type: object
      description: Provides adherence details of a policy attachment.
      properties:
        id:
          type: string
          description: UUID of the policy attachment.
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the policy attachment.
          example: "PolicyAttachment1"
        status:
          type: string
          description: Status of the policy attachment's governance compliance.
          enum:
            - FOLLOWED
            - VIOLATED
            - UNAPPLIED
          example: "FOLLOWED"
        evaluatedArtifacts:
          type: array
          description: Compliance status of the artifacts evaluated against the policy attachment.
          items:
            $ref: '#/components/schemas/ArtifactCompForPolicyAttachment'
    PolicyAttachmentAdherenceWithPolicies:
      type: object
      description: Adherence status of a policy attachment with policy details.
      properties:
        id:
          type: string
          description: UUID of the policy attachment.
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the policy attachment.
          example: "Policy1"
        status:
          type: string
          description: Status of the policy attachment's governance compliance.
          enum:
            - FOLLOWED
            - VIOLATED
            - UNAPPLIED
          example: "FOLLOWED"
        policyValidationResults:
          type: array
          description: List of policy validation information.
          items:
            $ref: '#/components/schemas/PolicyValidationResultWithoutRules'
    ArtifactCompForPolicyAttachment:
      type: object
      description: Compliance status of an artifact for a specific policy attachment.
      properties:
        id:
          type: string
          description: UUID of the artifact.
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          description: Status of the artifact's compliance to the policy attachment.
          enum:
            - COMPLIANT
            - NON-COMPLIANT
            - NOT-APPLICABLE
          example: "COMPLIANT"
        info:
          $ref: '#/components/schemas/ArtifactInfo'
    PolicyValidationResult:
      type: object
      description: Result of the policy validation.
      properties:
        id:
          type: string
          description: UUID of the policy.
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the policy.
          example: "API Security Policy"
        status:
          type: string
          description: Status of the policy validation.
          enum:
            - PASSED
            - FAILED
            - UNAPPLIED
          example: "PASSED"
        violatedRules:
          type: array
          description: List of violated rules.
          items:
            $ref: '#/components/schemas/RuleValidationResult'
        followedRules:
          type: array
          description: List of followed rules.
          items:
            $ref: '#/components/schemas/RuleValidationResult'
    PolicyValidationResultWithoutRules:
      type: object
      description: Result of the policy validation.
      properties:
        id:
          type: string
          description: UUID of the policy.
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the policy.
          example: "API Security Policy"
        policyType:
          type: string
          description: Context or area to which the policy applies.
          enum:
            - API_METADATA
            - API_DEFINITION
            - API_DOCUMENTATION
          example: API_DEFINITION
          x-enum-varnames:
            - API_METADATA
            - API_DEFINITION
            - API_DOCUMENTATION
        status:
          type: string
          description: Status of the policy validation.
          enum:
            - PASSED
            - FAILED
            - UNAPPLIED
          example: "PASSED"
    RuleValidationResult:
      type: object
      description: Result of the rule validation.
      properties:
        id:
          type: string
          description: UUID of the rule.
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the rule.
          example: "API Name Rule"
        status:
          type: string
          description: Status of the rule validation.
          enum:
            - PASSED
            - FAILED
          example: "FAILED"
        severity:
          type: string
          description: Severity level of the rule violation.
          enum:
            - ERROR
            - WARN
            - INFO
          example: WARN
        violatedPath:
          type: object
          description: Path in the artifact where the rule is violated.
          properties:
            path:
              type: string
              description: Path in the artifact where the rule is violated.
              example: "info.title"
            description:
              type: string
              description: Description of the path.
              example: "API name"
        message:
          type: string
          description: Message to be displayed when the rule is violated.
          example: "API name can not be too long or short"
        description:
          type: string
          description: Description of the rule.
          example: "API name should be between 5 to 50 characters"
    SeverityBasedRuleViolationCount:
      type: object
      description: List of rules violated by the artifact under each severity.
      properties:
        severity:
          type: string
          description: Severity level of the rule violation.
          enum:
            - ERROR
            - WARN
            - INFO
          example: WARN
        violatedRulesCount:
          type: integer
          description: Number of rules violated by the artifact under each severity.
          example: 1
    ArtifactInfo:
      type: object
      description: Detailed information about an artifact.
      properties:
        name:
          type: string
          description: Name of the artifact.
          example: "API1"
        type:
          type: string
          description: Type of the artifact.
          enum:
            - API
          example: "API"
        version:
          type: string
          description: Version of the artifact.
          example: "1.0.0"
  securitySchemes:
    OAuth2Security:
      type: oauth2
      flows:
        password:
          tokenUrl: https://localhost:9443/oauth2/token
          scopes:
            openid: Authorize access to user details
            apim:gov_policy_read: Read governance policies
            apim:gov_policy_manage: Manage governance policies
            apim:gov_policy_attachment_read: Read governance policy attachments
            apim:gov_policy_attachment_manage: Manage governance policy attachments
            apim:gov_result_read: Read governance results
  parameters:
    artifactId:
      name: artifactId
      in: path
      description: |
        **UUID** of the Artifact.
      required: true
      schema:
        type: string
    apiId:
      name: apiId
      in: path
      description: |
        **UUID** of the API.
      required: true
      schema:
        type: string
    artifactType:
      name: artifactType
      in: query
      description: |
        Type of the artifact.
      schema:
        type: string
        enum:
          - API
        default: API
        example: API
    policyId:
      name: policyId
      in: path
      description: |
        **UUID** of the Policy.
      required: true
      schema:
        type: string
    policyAttachmentId:
      name: policyAttachmentId
      in: path
      description: |
        **UUID** of the Policy Attachment.
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: |
        Maximum size of resource array to return.
      schema:
        type: integer
        default: 25
    offset:
      name: offset
      in: query
      description: |
        Starting point within the complete list of items qualified.
      schema:
        type: integer
        default: 0